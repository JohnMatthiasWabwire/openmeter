version: "3.9"

services:
  openmeter:
    image: ghcr.io/openmeterio/openmeter:latest
    command: openmeter --address 0.0.0.0:8888 --config /etc/openmeter/config.yaml
    restart: always
    pull_policy: always
    depends_on:
      kafka:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - 127.0.0.1:8888:8888
    volumes:
      - ./config.yaml:/etc/openmeter/config.yaml
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://openmeter:8888/api/v1/meters/api_requests_total/query || exit 1
      interval: 5s
      timeout: 3s
      retries: 100

  sink-worker:
    image: ghcr.io/openmeterio/openmeter:latest
    command: openmeter-sink-worker --config /etc/openmeter/config.yaml
    restart: always
    pull_policy: always
    depends_on:
      kafka:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      openmeter:
        condition: service_healthy
    ports:
      - 127.0.0.1:10000:10000
    volumes:
      - ./config.yaml:/etc/openmeter/config.yaml

  zookeeper:
    extends:
      file: ../docker-compose.yaml
      service: zookeeper

  # Duplicating kafka here due to https://github.com/docker/compose/issues/11544
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - 127.0.0.1:29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
    healthcheck:
      test: kafka-topics --bootstrap-server kafka:9092 --list
      interval: 5s
      timeout: 3s
      retries: 100

  clickhouse:
    extends:
      file: ../docker-compose.yaml
      service: clickhouse
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://clickhouse:8123/ping || exit 1
      interval: 5s
      timeout: 3s
      retries: 100

  # Profile: dedupe-redis
  redis:
    extends:
      file: ../docker-compose.yaml
      service: redis

  postgres:
    image: postgres:14.9
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=postgres
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 5s
      timeout: 60s
      retries: 5
